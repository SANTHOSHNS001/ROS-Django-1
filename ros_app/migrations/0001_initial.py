# Generated by Django 4.2.6 on 2023-10-09 05:22

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ros_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Enter a unique email address.', max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(help_text="Enter the user's first name.", max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(help_text="Enter the user's last name.", max_length=30, verbose_name='Last Name')),
                ('picture', models.ImageField(blank=True, help_text='Upload a profile picture for the user.', null=True, upload_to=ros_app.models.user_directory_path, verbose_name='Profile Picture')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Custom User',
                'verbose_name_plural': 'Custom Users',
            },
            managers=[
                ('objects', ros_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='VDML_Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_doc_no', models.CharField(max_length=100, unique=True)),
                ('ros_doc_no', models.CharField(max_length=100, unique=True)),
                ('document_title', models.CharField(max_length=100, unique=True)),
                ('document_type', models.CharField(max_length=100)),
                ('document_size', models.CharField(choices=[('A4', 'A4'), ('A3', 'A3'), ('A2', 'A2'), ('A1', 'A1'), ('LEGAL', 'LEGAL'), ('LETTER', 'LETTER')], default='A4', max_length=100)),
                ('schedule_submission_date', models.DateTimeField()),
                ('doc_revision_no', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('document_code', models.CharField(max_length=100, unique=True)),
                ('planned_date', models.DateTimeField(blank=True, null=True)),
                ('forecast_date', models.DateTimeField(blank=True, null=True)),
                ('actual_submission_date', models.DateTimeField(blank=True, null=True)),
                ('ros_transmittal_no', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('doc_duedate', models.DateTimeField(blank=True, null=True)),
                ('doc_returned_date', models.DateTimeField(blank=True, null=True)),
                ('doc_return_code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('planned_return_date', models.DateTimeField(blank=True, null=True)),
                ('actual_return_date', models.DateTimeField(blank=True, null=True)),
                ('approval_code', models.CharField(max_length=100, unique=True)),
                ('trasmittal_no', models.CharField(max_length=100, unique=True)),
                ('ros_engineer', models.ManyToManyField(blank=True, help_text='Assign a ROS Engineer to the project.', related_name='ros_engineer', to=settings.AUTH_USER_MODEL, verbose_name='ROS Engineer')),
            ],
        ),
        migrations.CreateModel(
            name='RolePermissionAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_read', models.BooleanField(default=False)),
                ('can_write', models.BooleanField(default=False)),
                ('can_edit', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ros_app.custompermissions')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ros_app.customroles')),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('client_name', models.CharField(max_length=100)),
                ('cpm_name', models.TextField()),
                ('cpm_email', models.EmailField(max_length=254)),
                ('cpm_phone', models.CharField(max_length=20)),
                ('cdm_name', models.CharField(max_length=255)),
                ('cdm_email', models.EmailField(max_length=254)),
                ('cdm_phone', models.CharField(max_length=20)),
                ('document_manager', models.ManyToManyField(blank=True, help_text='Assign a document manager to the project.', related_name='managed_documents', to=settings.AUTH_USER_MODEL, verbose_name='Document Manager')),
                ('project_manager', models.ManyToManyField(blank=True, help_text='Assign a project manager to the project.', related_name='managed_projects', to=settings.AUTH_USER_MODEL, verbose_name='Project Manager')),
            ],
        ),
        migrations.AddField(
            model_name='customroles',
            name='permission',
            field=models.ManyToManyField(blank=True, related_name='roles', through='ros_app.RolePermissionAssociation', to='ros_app.custompermissions'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='projects',
            field=models.ManyToManyField(blank=True, help_text='Assign a project to the user.', related_name='users', to='ros_app.projects', verbose_name='Projects'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='role',
            field=models.ForeignKey(blank=True, help_text='Assign a role to the user.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='ros_app.customroles', verbose_name='Role'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='vdml_documents',
            field=models.ManyToManyField(blank=True, help_text='Assign a VDML Document to the user.', related_name='users', to='ros_app.vdml_document', verbose_name='VDML Documents'),
        ),
    ]
